{"version":3,"file":"static/js/main.0d354975.js","mappings":"MACQA,SAASC,iBAAiB,oBAAoB,WAE1C,MAAMC,EAAcC,aAAaC,QAAQ,eAGzC,GAAIF,EAAa,CACb,MAAMG,EAAUL,SAASM,eAAe,YACxCD,EAAQE,IAAML,EACdG,EAAQG,OAAS,WACbC,QAAQC,IAAI,iCAChB,EACAL,EAAQM,QAAU,WACdF,QAAQG,MAAM,2BAClB,CACJ,CACJ,IACAZ,SAASM,eAAe,YAAYL,iBAAiB,SAAS,MA0B9DY,eAA0BC,EAAUC,GAChC,IACI,MAAMC,QAAiBC,MAAM,+EAA+EH,KAC5G,GAAKE,EAASE,GAEP,CACH,MAAMC,QAAaH,EAASI,OACtBC,QAoBlBR,eAAuBS,EAAqBC,GACxC,MAAMC,EAAS,IAAIC,WAAWC,KAAKJ,GAAqBK,MAAM,IAAIC,KAAIC,GAAQA,EAAKC,WAAW,MACxFC,EAAKP,EAAOQ,MAAM,EAAG,IACrBC,EAAgBT,EAAOQ,MAAM,IAE7BE,EAAY,CAAEC,KAAM,UAAWJ,GAAIA,GACnCK,QAAoBC,OAAOC,OAAOC,OAAOC,UAC3C,MAAOjB,EAAKW,GAAW,EAAO,CAAC,YAG7BO,QAAsBJ,OAAOC,OAAOC,OAAOG,QAC7CR,EAAWE,EAAaH,GAG5B,OAAO,IAAIU,aAAcC,OAAOH,EACpC,CAnC0CC,CAAQvB,EAAe,SAAG0B,GAClDC,EAAY3B,EAAU,IAC5BhB,aAAa4C,QAAQ,YAAaD,GAClC3C,aAAa4C,QAAQ,cAAe5B,EAAY,OAChDhB,aAAa4C,QAAQ,cAAe5B,EAAY,OAChDhB,aAAa4C,QAAQ,iBAAkB5B,EAAe,UACtDhB,aAAa4C,QAAQ,WAAY5B,EAAe,UAChDhB,aAAa4C,QAAQ,WAAY5B,EAAe,UAChDhB,aAAa4C,QAAQ,aAAc5B,EAAiB,YAIpD,SAFaA,EAAe,WAAML,GAAYO,IAAoBN,EAGtE,CAhBI,MAAM,IAAIiC,MAAM,8BAiBxB,CAAE,MAAOpC,GAEL,OADAH,QAAQG,MAAM,qBAAsBA,IAC7B,CACX,CACJ,EAhDIqC,CAFiBjD,SAASM,eAAe,YAAY4C,MACpClD,SAASM,eAAe,YAAY4C,OAEhDC,MAAKC,IACF,GAAIA,EAAiB,CACjBpD,SAASM,eAAe,WAAW+C,MAAMC,QAAU,OACnD,IAAIC,EAAMpD,aAAaC,QAAQ,aAmE3Ca,MAFgB,oFAhESsC,KAmEpBJ,MAAKnC,IACF,IAAKA,EAASE,GACV,MAAM,IAAI8B,MAAM,UAAUhC,EAASwC,UAEvC,OAAOxC,EAASI,MAAM,IAEzB+B,MAAKhC,IACFV,QAAQC,IAAI,gBAAiBS,EAAiB,YAC9ChB,aAAa4C,QAAQ,WAAY5B,EAAiB,YAClDhB,aAAa4C,QAAQ,YAAa5B,EAAY,OAC9ChB,aAAa4C,QAAQ,WAAY5B,EAAY,OAC7ChB,aAAa4C,QAAQ,UAAW5B,EAAc,SAC9ChB,aAAa4C,QAAQ,QAAS5B,EAAkB,aAChDhB,aAAa4C,QAAQ,QAAS5B,EAAY,MAAE,IAG/CsC,OAAM7C,IACHH,QAAQG,MAAM,SAAUA,EAAM,IAnF1B8C,YAAW,WACHrB,OAAOsB,SAASC,KAAO,oBAC3B,GAAG,IAEX,MACI5D,SAASM,eAAe,YAAYuD,UAAY,+BAChD7D,SAASM,eAAe,YAAY+C,MAAQ,WAChD,IAEHI,OAAM7C,IACHH,QAAQG,MAAM,+BAAgCA,GAC9CkD,MAAM,0CAA0C,GAClD,IAGV,MAAMjB,EAAO,IAAIpB,WAAW,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,I","sources":["index.js"],"sourcesContent":["\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n            // Retrieve the logo from local storage\r\n            const companyLogo = localStorage.getItem('companyLogo');\r\n\r\n            // If a logo exists, set it as the source for the image\r\n            if (companyLogo) {\r\n                const logoImg = document.getElementById('logo-img');\r\n                logoImg.src = companyLogo; // Set the logo image source\r\n                logoImg.onload = function () {\r\n                    console.log('Logo image loaded successfully');\r\n                };\r\n                logoImg.onerror = function () {\r\n                    console.error('Error loading logo image');\r\n                };\r\n            }\r\n        });\r\n        document.getElementById('loginBtn').addEventListener('click', () => {\r\n            const username = document.getElementById('username').value;\r\n            const password = document.getElementById('password').value;\r\n            loginCheck(username, password)\r\n                .then(isAuthenticated => {\r\n                    if (isAuthenticated) {\r\n                        document.getElementById('overlay').style.display = 'flex';\r\n                        let exm = localStorage.getItem(\"companyID\");\r\n                        getCustmData(exm);\r\n                        setTimeout(function () {\r\n                                window.location.href = 'employee_list.html';\r\n                            }, 3000);\r\n\r\n                    } else {\r\n                        document.getElementById('errorMsg').innerHTML = \"Invalid username or password\";\r\n                        document.getElementById('errorMsg').style = \"color:red\";\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error during authentication:', error);\r\n                    alert('An error occurred during authentication');\r\n                });\r\n        });\r\n\r\n        const key1 = new Uint8Array([16, 147, 220, 113, 166, 142, 22, 93, 241, 91, 13, 252, 112, 122, 119, 95]);\r\n\r\n        async function loginCheck(username, password) {\r\n            try {\r\n                const response = await fetch(`https://397vncv6uh.execute-api.us-west-2.amazonaws.com/test/company/getuser/${username}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                } else {\r\n                    const data = await response.json();\r\n                    const decryptPassword = await decrypt(data[\"Password\"], key1);\r\n                    const companyID = data[\"CID\"];\r\n                    localStorage.setItem('companyID', companyID);\r\n                    localStorage.setItem('companyName', data[\"CName\"]);\r\n                    localStorage.setItem('companyLogo', data[\"CLogo\"]);\r\n                    localStorage.setItem('companyAddress', data[\"CAddress\"]);\r\n                    localStorage.setItem('username', data[\"UserName\"]);\r\n                    localStorage.setItem('password', data[\"Password\"]);\r\n                    localStorage.setItem('reportType', data[\"ReportType\"]);\r\n\r\n                    const user = data[\"UserName\"] === username && decryptPassword === password;\r\n\r\n                    return user ? true : false;\r\n                }\r\n            } catch (error) {\r\n                console.error('Login check error:', error);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        async function decrypt(encryptedDataWithIV, key) {\r\n            const buffer = new Uint8Array(atob(encryptedDataWithIV).split('').map(char => char.charCodeAt(0)));\r\n            const iv = buffer.slice(0, 12);\r\n            const encryptedData = buffer.slice(12);\r\n\r\n            const algorithm = { name: 'AES-GCM', iv: iv };\r\n            const importedKey = await window.crypto.subtle.importKey(\r\n                'raw', key, algorithm, false, ['decrypt']\r\n            );\r\n\r\n            const decryptedData = await window.crypto.subtle.decrypt(\r\n                algorithm, importedKey, encryptedData\r\n            );\r\n\r\n            return new TextDecoder().decode(decryptedData);\r\n        }\r\n\r\n        function getCustmData(cid1) {\r\n            const apiUrlBase2 = 'https://397vncv6uh.execute-api.us-west-2.amazonaws.com/test/customer';\r\n            const apiUrl2 = `${apiUrlBase2}/getUsingCID/${cid1}`;\r\n\r\n            fetch(apiUrl2)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`Error: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log('Data fetched:', data[\"CustomerID\"]);\r\n                    localStorage.setItem('customId', data[\"CustomerID\"]);\r\n                    localStorage.setItem('firstName', data[\"FName\"]);\r\n                    localStorage.setItem('lastName', data[\"LName\"]);\r\n                    localStorage.setItem('address', data[\"Address\"]);\r\n                    localStorage.setItem('phone', data[\"PhoneNumber\"]);\r\n                    localStorage.setItem('email', data[\"Email\"]);\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n"],"names":["document","addEventListener","companyLogo","localStorage","getItem","logoImg","getElementById","src","onload","console","log","onerror","error","async","username","password","response","fetch","ok","data","json","decryptPassword","encryptedDataWithIV","key","buffer","Uint8Array","atob","split","map","char","charCodeAt","iv","slice","encryptedData","algorithm","name","importedKey","window","crypto","subtle","importKey","decryptedData","decrypt","TextDecoder","decode","key1","companyID","setItem","Error","loginCheck","value","then","isAuthenticated","style","display","exm","status","catch","setTimeout","location","href","innerHTML","alert"],"sourceRoot":""}